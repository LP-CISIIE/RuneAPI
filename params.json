{
  "name": "RuneAPI",
  "tagline": "Unofficial API and Interface for RuneAudio",
  "body": "#  RuneAudio : “One player to rune them all.”\r\n>RuneAudio est un logiciel libre qui permet de transformer un micro-pc (raspberry, odroid...) en un système HI-FI. A partir d'une source il est alors possible de transmettre un son à partir de plusieurs sources (webradio, NAS, USB).\r\n\r\n![runeaudio](https://github.com/LP-CISIIE/RuneAPI/blob/master/img/how-it-works.png?raw=true)\r\n\r\n***\r\n\r\n### Explication du sujet\r\nActuellement RuneaAudio ne permet pas de développer une interface tiers, ou de rassembler plusieurs appareils sur la même interface.\r\nLe but de notre projet et de résoudre ces deux problématiques \r\n\r\n* Créer une API\r\n\r\n>Dans un premier temps nous devions créer une API, permettant de communiquer facilement avec le système de gestion de musique. Nous devions donc permettre à tous de pouvoir créer sa propre interface facilement.\r\n\r\n* Créer une interface\r\n\r\n>Par la suite nous avons créé une interface utilisant notre API, afin de résoudre notre second problème, contrôler plusieurs appareils sur la même interface\r\n\r\n***\r\n\r\n### Réalisation de l'API\r\n\r\nNous avons choisi de développer notre API en PHP en utilisant le framework SLIM 2.\r\nVoici un exemple de déclaration de route: \r\n\r\n![route](https://github.com/LP-CISIIE/RuneAPI/blob/master/img/route.PNG?raw=true)\r\n\r\n* Dans $app->rootUri est stocké l'adresse IP de l'API\r\n* $app->get définit le type de requête qui sera fait (GET, POST, PUT), il a pour paramètre l'URI par laquelle on accède à la requete et une fonction qui sera executé lorsque l'utilisateur fera appel à cette URI\r\n* mpdController::getMpd($app); fait appel à la fonction qui est appelé lorsque cette URL est appelé.\r\n\r\n> Nous avons choisi de retourner les informations aux formats JSON, pour la simplicité de ce format expoloitable et décodable dans de nombreux langages.\r\n\r\nVoici un exemple de retour d'une requete sur l'API:\r\n![source](https://github.com/LP-CISIIE/RuneAPI/blob/master/img/source.PNG?raw=true)\r\n\r\n***\r\n\r\n### Réalisation de l'interface\r\n\r\nL'interface que nous avons réalisé est entièrement conçu en AngularJS. Nous nous sommes tout d'abord concentré sur les fonctionnalités principales et au style graphique de notre interface avant de nous étendre vers des fonctionnalités moins importantes\r\n\r\n> Nous avons choisit d'opter pour une interface minimaliste et facile d'utilisation, qui est aussi bien adapté à l'utilisation sur ordinateur, tablette ou mobile.\r\n\r\n\r\n### Routes de l'API\r\n\r\n**GET** /player/play      :   Lance la musique\r\n\r\n**GET** /player/pause     :   met la musique sur pause\r\n\r\n**GET**  /player/stop      :   stop la musique\r\n\r\n**GET** /player/next      :   passe à la musique précédente\r\n\r\n**GET** /player/previous  :   passe à la musique précédente\r\n***\r\n**GET** /playlist/repeatOn             : lance la playlist en boucle\r\n\r\n**GET**  /playlist/repeatOff            : la playlist s’arrête à la fin\r\n\r\n**GET** /playlist/SoundRepeatOn        : La musique est joué en boucle\r\n\r\n**GET** /playlist/SoundRepeatOff       : La musique n'est plus joué en boucle\r\n***\r\n**PUT** /volume/:nb                    : Change le volume à nb (0 a 100)\r\n***\r\n**GET** /gestion/:pos/:temps           : A partir du n° dans la playlist définit le temps ( en seconde ) de la lecture.(avancer ou reculer la musique)\r\n***\r\n**GET** /sources                       : Récupère les sources USB uniquement\r\n\r\n**GET** /sources/edit/:id              : Affiche un NAS\r\n***\r\n**GET** /sources                       : Modifier paramètre des sources\r\n***\r\n**POST** /sources/delete               : Supprime un nas\r\n\r\n`{\r\n\r\n   \"id\" : \"\"\r\n\r\n}`\r\n\r\n**POST** /sources/add                  : Ajoute une nouvelle source\r\n\r\n`{\r\n\r\n    \"name\" : \"\",\r\n\r\n    \"id\" : \"\",\r\n\r\n    \"type\" : \"\",\r\n\r\n    \"address\" : \"\",\r\n\r\n    \"remotedir\" : \"\",\r\n\r\n    \"nas\" : \"\",\r\n\r\n    \"username\" : \"\",\r\n\r\n    \"password\" : \"\",\r\n\r\n    \"charset\"  : \"\",\r\n\r\n    \"rsize\" : \"\",\r\n\r\n    \"wsize\" : \"\",\r\n\r\n    \"options\" : \"\",\r\n\r\n    \"error\" : \"\"\r\n\r\n}`\r\n***\r\n**GET** /mpd                             : Récupère le page de configuration du MPD\r\n***\r\n**PUT** /mpd/analogique                  : Change l'output en analogique\r\n\r\n**PUT** /mpd/hdmi                        : Change l'output en HDMI\r\n***\r\n**POST** /mpd                            : Modifie les paramètres du MPD\r\n\r\n`{\r\n\r\n\t\"mixer_type\": \"\",\r\n\r\n\t\"user\": \"\",\r\n\r\n\t\"log_level\" : \"\",\r\n\r\n\t\"state_file\" : \"\",\r\n\r\n\t\"ffmpeg\" : \"\",\r\n\r\n\t\"gapless_mp3_playback\" : \"\",\r\n\r\n\t\"dsd_usb\" : \"\",\r\n\r\n\t\"volume_normalization\" : \"\",\r\n\r\n\t\"audio_buffer_size\" : \"\",\r\n\r\n\t\"buffer_before_play\" : \"\",\r\n\r\n\t\"auto_update\" : \"n\"\r\n\r\n}`\r\n***\r\n**GET** /network                          : Récupère la page de configuration du network\r\n\r\n**GET** /network/eth0                     : Récupère la page de configuration ethernet\r\n\r\n**GET** /network/wlan0                    : Récupère la page de configuration wifi\r\n***\r\n**POST** /network                         : Modifie information de connexion\r\n\r\n`{\r\n\r\n\t\"name\": \"\",\r\n\r\n\t\"wireless\": \"\",\r\n\r\n\t\"dhcp\" : \"\",\r\n\r\n\t\"ip\" : \"\",\r\n\r\n\t\"netmask\" : \"\",\r\n\r\n\t\"gw\" : \"\",\r\n\r\n\t\"dns1\" : \"\",\r\n\r\n\t\"dns2\" : \"\"\r\n\r\n}`\r\n\r\n\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}